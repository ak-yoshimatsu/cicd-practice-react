name: deploy-react

on:
  workflow_run:
    # build-react.yaml ワークフローが完了したときにトリガー
    workflows: ["build-react"] # build-react.yaml の 'name' と一致させる
    types:
      - completed
    branches:
      - main # main ブランチでのビルド完了時のみ実行

jobs:
  deploy:
    # build-react ワークフローが成功した場合のみデプロイを実行
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        # workflow_run トリガーの場合、このステップは必須ではありませんが、
        # リポジトリのコンテキストが必要な場合に備えて含めています。

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-output # build-react.yaml でアップロードしたアーティファクト名と一致させる
          path: ./dist # ダウンロードしたアーティファクトを配置するパス

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} # 例: ap-northeast-1 (東京リージョン)

      - name: Deploy to S3
        uses: aws-actions/s3-sync@v1
        with:
          bucket: ${{ secrets.S3_BUCKET_NAME }} # デプロイ先のS3バケット名
          args: --delete # S3バケット内の既存のファイルを削除して同期する
          source-dir: ./dist # ダウンロードしたビルド成果物のパス
          # CloudFront を使用している場合、以下の行のコメントを解除してキャッシュをクリアできます
          # distribution-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          # invalidation-paths: "/*"
